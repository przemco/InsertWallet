// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.Wallet.Infrastructure;

#nullable disable

namespace Modules.Wallet.Infrastructure.Migrations
{
    [DbContext(typeof(WalletAppDbContext))]
    [Migration("20250223102710_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Modules.Wallet.Domain.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("Modules.Wallet.Domain.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("Modules.Wallet.Domain.WalletItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("Voulume", "Modules.Wallet.Domain.WalletItem.Voulume#Money", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Amount")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CurrencyCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("CurrencyName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<char?>("CurrencySign")
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("WalletItem");
                });

            modelBuilder.Entity("Modules.Wallet.Domain.Wallet", b =>
                {
                    b.HasOne("Modules.Wallet.Domain.Tenant", null)
                        .WithMany("Wallets")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Modules.Wallet.Domain.WalletItem", b =>
                {
                    b.HasOne("Modules.Wallet.Domain.Wallet", null)
                        .WithMany("WalletItems")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Modules.Wallet.Domain.Tenant", b =>
                {
                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Modules.Wallet.Domain.Wallet", b =>
                {
                    b.Navigation("WalletItems");
                });
#pragma warning restore 612, 618
        }
    }
}
